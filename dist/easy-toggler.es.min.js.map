{"version":3,"file":"easy-toggler.es.min.js","sources":["../src/core/index.js","../src/core/toggle.js","../src/core/remove.js","../src/core/add.js","../src/core/attrs.js","../src/easy-toggler.es.js"],"sourcesContent":["import toggle from './toggle';\nimport add from './add';\nimport remove from './remove';\n\nfunction easyTogglerHandler(e, attrs) {\n    const $toggler = e.target.closest(`[${ attrs.toggle }]`);\n    const $remove = e.target.closest(`[${ attrs.remove }]`);\n    const $add = e.target.closest(`[${ attrs.add }]`);\n\n    if($toggler) {\n        e.preventDefault();\n        toggle($toggler, attrs);\n    }\n\n    if($remove) {\n        e.preventDefault();\n        remove($remove, attrs);\n    }\n\n    if($add) {\n        e.preventDefault();\n        add($add, attrs);\n    }\n\n    if(!$toggler && !$remove && !$add) {\n        const $rcoes = document.querySelectorAll(`[${ attrs.rcoe }]`);\n\n        Array.from($rcoes).forEach(($rcoe) => {\n            let block = $rcoe.getAttribute(attrs.toggle);\n            let block_class = $rcoe.getAttribute(attrs.class);\n\n            if(!e.target.closest(block)) {\n                document.querySelector(block)?.classList.remove(block_class);\n\n                const _selfClass = $rcoe.getAttribute(attrs.self);\n                if(_selfClass) {\n                    $rcoe.classList.remove(_selfClass);\n                }\n            }\n        });\n    }\n}\n\nexport default easyTogglerHandler;\n","const toggle = ($toggler, attrs) => {\n    const _target = $toggler.getAttribute(attrs.toggle);\n\n    document.querySelectorAll(`[${ attrs.toggle }]`).forEach((easyBlock) => {\n        if(!easyBlock.hasAttribute(attrs.parallel) && easyBlock !== $toggler){\n            document.querySelector(easyBlock.getAttribute(attrs.toggle)).classList.remove(easyBlock.getAttribute(attrs.class));\n\n            const _selfClass = $toggler.getAttribute(attrs.self);\n            if(_selfClass) {\n                $toggler.classList.remove(_selfClass);\n            }\n        }\n    });\n\n    document.querySelector(_target)?.classList.toggle($toggler.getAttribute(attrs.class));\n\n    const _selfClass = $toggler.getAttribute(attrs.self);\n    if(_selfClass) {\n        $toggler.classList.toggle(_selfClass);\n    }\n}\n\nexport default toggle;\n","const remove = ($remove, attrs) => {\n    const _target = $remove.getAttribute(attrs.remove);\n    const _class = $remove.getAttribute(attrs.class);\n\n    document.querySelectorAll(_target).forEach((easyBlock) => {\n        easyBlock.classList.remove(_class);\n    });\n\n    const _selfClass = $remove.getAttribute(attrs.self);\n    if(_selfClass) {\n        $remove.classList.remove(_selfClass);\n    }\n}\n\nexport default remove;\n","const add = ($add, attrs) => {\n    const _target = $add.getAttribute(attrs.add);\n    const _class = $add.getAttribute(attrs.class);\n\n    document.querySelectorAll(_target).forEach((easyBlock) => {\n        easyBlock.classList.add(_class);\n    });\n\n    const _selfClass = $add.getAttribute(attrs.self);\n    if(_selfClass) {\n        $add.classList.add(_selfClass);\n    }\n}\n\nexport default add;\n","const attrsDefault = {\n    toggle: 'easy-toggle',\n    add: 'easy-add',\n    remove: 'easy-remove',\n    class: 'easy-class',\n    rcoe: 'easy-rcoe',\n    parallel: 'easy-parallel',\n    self: 'easy-self'\n}\n\nexport default attrsDefault;\n","import easyTogglerHandler from './core';\nimport attrsDefault from './core/attrs';\n\n/**\n * Setup easyToggler plugin\n * with custom attributes\n * @param params<Object>\n */\nconst easySetup = (params) => {\n    const customAttrs = {attrsDefault, ...params};\n    document.addEventListener('click', (e) => easyTogglerHandler(e, customAttrs));\n};\n\nexport default easySetup;\n"],"names":["easyTogglerHandler","e","attrs","$toggler","target","closest","toggle","$remove","remove","$add","add","preventDefault","_target","getAttribute","document","querySelectorAll","forEach","easyBlock","hasAttribute","parallel","querySelector","classList","class","_selfClass","self","_class","$rcoes","rcoe","Array","from","$rcoe","block","block_class","attrsDefault","easySetup","params","customAttrs","addEventListener"],"mappings":";;;;;AAIA,SAASA,EAAmBC,EAAGC,GAC3B,MAAMC,EAAWF,EAAEG,OAAOC,QAAS,IAAIH,EAAMI,WACvCC,EAAUN,EAAEG,OAAOC,QAAS,IAAIH,EAAMM,WACtCC,EAAOR,EAAEG,OAAOC,QAAS,IAAIH,EAAMQ,QAiBzC,GAfGP,IACCF,EAAEU,iBCVK,EAACR,EAAUD,KACtB,MAAMU,EAAUT,EAASU,aAAaX,EAAMI,QAE5CQ,SAASC,iBAAkB,IAAIb,EAAMI,WAAYU,SAASC,IACtD,IAAIA,EAAUC,aAAahB,EAAMiB,WAAaF,IAAcd,EAAS,CACjEW,SAASM,cAAcH,EAAUJ,aAAaX,EAAMI,SAASe,UAAUb,OAAOS,EAAUJ,aAAaX,EAAMoB,QAE3G,MAAMC,EAAapB,EAASU,aAAaX,EAAMsB,MAC5CD,GACCpB,EAASkB,UAAUb,OAAOe,OAKtCT,SAASM,cAAcR,IAAUS,UAAUf,OAAOH,EAASU,aAAaX,EAAMoB,QAE9E,MAAMC,EAAapB,EAASU,aAAaX,EAAMsB,MAC5CD,GACCpB,EAASkB,UAAUf,OAAOiB,IDP1BjB,CAAOH,EAAUD,IAGlBK,IACCN,EAAEU,iBEfK,EAACJ,EAASL,KACrB,MAAMU,EAAUL,EAAQM,aAAaX,EAAMM,QACrCiB,EAASlB,EAAQM,aAAaX,EAAMoB,OAE1CR,SAASC,iBAAiBH,GAASI,SAASC,IACxCA,EAAUI,UAAUb,OAAOiB,MAG/B,MAAMF,EAAahB,EAAQM,aAAaX,EAAMsB,MAC3CD,GACChB,EAAQc,UAAUb,OAAOe,IFMzBf,CAAOD,EAASL,IAGjBO,IACCR,EAAEU,iBGpBE,EAACF,EAAMP,KACf,MAAMU,EAAUH,EAAKI,aAAaX,EAAMQ,KAClCe,EAAShB,EAAKI,aAAaX,EAAMoB,OAEvCR,SAASC,iBAAiBH,GAASI,SAASC,IACxCA,EAAUI,UAAUX,IAAIe,MAG5B,MAAMF,EAAad,EAAKI,aAAaX,EAAMsB,MACxCD,GACCd,EAAKY,UAAUX,IAAIa,IHWnBb,CAAID,EAAMP,KAGVC,IAAaI,IAAYE,EAAM,CAC/B,MAAMiB,EAASZ,SAASC,iBAAkB,IAAIb,EAAMyB,SAEpDC,MAAMC,KAAKH,GAAQV,SAASc,IACxB,IAAIC,EAAQD,EAAMjB,aAAaX,EAAMI,QACjC0B,EAAcF,EAAMjB,aAAaX,EAAMoB,OAE3C,IAAIrB,EAAEG,OAAOC,QAAQ0B,GAAQ,CACzBjB,SAASM,cAAcW,IAAQV,UAAUb,OAAOwB,GAEhD,MAAMT,EAAaO,EAAMjB,aAAaX,EAAMsB,MACzCD,GACCO,EAAMT,UAAUb,OAAOe,QIpC3C,MAAMU,EAAe,CACjB3B,OAAQ,cACRI,IAAK,WACLF,OAAQ,cACRc,MAAO,aACPK,KAAM,YACNR,SAAU,gBACVK,KAAM,aCCJU,EAAaC,IACf,MAAMC,EAAc,CAACH,kBAAiBE,GACtCrB,SAASuB,iBAAiB,SAAUpC,GAAMD,EAAmBC,EAAGmC"}